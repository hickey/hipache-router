#!/usr/bin/env node

'use strict';

var fs = require('fs'),
    path = require('path'),
    cluster = require('cluster'),
    util = require('util'),
    argv = require('optimist').argv,
    master = require('../lib/master'),
    worker = require('../lib/worker');

var help = [
    'usage: hipache [options]',
    '',
    'Starts a hipache server',
    '',
    'options:',
    '   -c, --config CONFIGFILE     Location of the configuration file',
    '   -h, --help                  Display help'
].join('\n');

var config;


if (argv.h || argv.help) {
    return util.puts(help);
}

if (argv.c || argv.config) {
    var configFile = argv.c ? argv.c : argv.config;
    var data = fs.readFileSync(configFile);
    util.log('Loading config from ' + configFile);
    config = JSON.parse(data);
} else {
    config = (function (configFile) {
        if (process.env.SETTINGS_FLAVOR !== undefined) {
            path = configFile.replace(/\.json$/, '_' + process.env.SETTINGS_FLAVOR + '.json');
        }
        util.log('Loading config from ' + configFile);
        var data = fs.readFileSync(configFile);
        return JSON.parse(data);
    }(path.resolve(__dirname, '..', 'config', 'config.json')));
}

if (cluster.isMaster) {
    // Run the master
    var m = master(config);
    m.run();
    util.log('Server is running. ' + JSON.stringify(config.server));
} else {
    // Run the worker
    var w = worker(config);
    w.run();
}
